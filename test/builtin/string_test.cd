import "unit" as unit

class StringTest : unit.TestCase {

	fun splitlines_test() {
		fun genString() {
			var str = []
			for (i in range(0, 100)) {
				str.append("${\"1\"*1000}\n")
			}
			return "".join(str)
		}
		for (line in genString().splitlines()) {
			this.assertEquals("1"*1000, line)
		}

		this.assertEquals([], "".splitlines())
		this.assertEquals(["", ""], "\n\n".splitlines())
		this.assertEquals(["abcdefg"], "abcdefg".splitlines())
		this.assertEquals(["abcdefg"], "abcdefg\n".splitlines())
	}

	fun join_test() {
		this.assertEquals("", "".join([]))
		this.assertEquals("", ",".join([]))
		this.assertEquals("5", ",".join([5]))
		this.assertEquals("5, 6", ", ".join([5, 6]))
	}

	fun operator_test() {
		@assertEquals("a", "abcd"[0])
		@assertEquals("b", "abcd"[1])
		@assertEquals("d", "abcd"[-1])

		@expectedErrorRaised(RangeError, -> ""[0])
		@expectedErrorRaised(RangeError, -> ""[-1])
		@expectedErrorRaised(RangeError, -> "a"[-2])
		@expectedErrorRaised(TypeError, -> "a"[-2] = "a")
		@expectedErrorRaised(TypeError, -> "a"[1] = "a")
		@expectedErrorRaised(TypeError, -> "a"[-1] = 0)
	}
}
