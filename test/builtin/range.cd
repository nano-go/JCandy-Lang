
fun equals(arr1, arr2) {
	var s1 = arr1.size()
	var s2 = arr2.size()
	if (s1 != s2) {
		return false
	}
	for (i in range(0, s1)) {
		if (arr1[i] != arr2[i]) {
			return false
		}
	}
	return true
}

fun expectedError(fn) {
	try { fn(); }
	intercept AttributeError as e {
		return
	} intercept {
		assert false : "Expect that an attribute error is raised."
	}
	else {
		assert false : "Expect that an attribute error is raised."
	}
}

fun immutableObjTest() {
	var r = range(0, 15)
	assert r.left == 0
	assert r.right == 15
	expectedError(lambda -> r.left =15)
	expectedError(lambda -> r.right =15)
}

fun iteratorTest() {
	var a = range(0, 10)
	var cmpI = 0
	for (i in a) {
		assert cmpI == i
		cmpI += 1
	}
	
	a = range(10, 0)
	cmpI = 10
	for (i in a) {
		assert cmpI == i
		cmpI -= 1
	}
}

fun emptySetTest() {
	var a1 = range(0, 0)
	var a2 = Range(1, 1)

	for (i in a1) a1 = false
	for (i in a2) a2 = false
	assert a1 && a2
}

fun main() {
	iteratorTest()
	emptySetTest()
}

main()
