import "unit" as unit

class ForTest : unit.TestCase {

	fun for_test() {
		var sum=0
		for (i in range(0, 15))
			sum += i	
		
		this.assertEquals(105, sum)
	}

	fun control_test() {
		var sum = 0
		for (i in range(0, 15)) {
			if (i % 2 == 0) {
				continue
			}
			sum+=i
			if (i == 11) {
				break
			}
		}

		this.assertEquals(1+3+5+7+9+11, sum)
		var sum = 0
		for (i in range(0, 15)) {
			for (j in range(0, 15)) {
				if (j % 2 == 0) {
					continue
				}
				sum += j
				if (i + j == 10) {
					break
				}
			}
			sum += i
			if (i % 3==0) continue
		}
		this.assertEquals(650, sum)
	}

	fun iterator_test() {
		class Foo {
			fun _iterator() {
				var sum = 10
				var i = 0
				var iterator = Object()
				iterator._hasNext = lambda -> i < sum
				iterator._next = lambda -> { var tmp = i; i += 1; return tmp;}
				return iterator
			}
		}

		var sum = 0
		for (i in Foo()) {
			sum += i * 31
		}
		this.assertEquals(1395, sum)
	}
}


class WhileTest : unit.TestCase {

	fun while_test() {
		var i = 0
		var sum = 0
		while ((i += 1) <= 15) 
			sum += i
		this.assertEquals(120, sum)
	}
	
	fun control_test() {
		var sum = 0
		var i = 0
		var j = 0
		while (i < 15) {
			if (i % 2 == 0) {
				i += 1
				continue
			}
			sum+=i
			if (i == 11) {
				break
			}
			i += 1
		}
		i = 0

		this.assertEquals(1+3+5+7+9+11, sum)
		var sum = 0
		while (i < 15) {
			j = 0
			while (j < 15) {
				if (j % 2 == 0) {
					j += 1
					continue
				}
				sum += j
				if (i + j == 10) {
					break
				}
				j += 1
			}
			sum += i
			if (i % 3==0) {
				i += 1
				continue
			}
			i += 1
		}
		this.assertEquals(650, sum)
	}
}
