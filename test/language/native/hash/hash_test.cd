import "hash" as h

fun simple_operation_test() {
	var map = h.HashMap(16)
	
	map.put(5, 6)
	assert map[5] == 6
	
	map["Jack"] = "abcd"
	assert map.get("Jack") == "abcd"
	assert map._getItem("Jack") == "abcd"
	
	map.remove("Jack")
	assert map["Jack"] == null
	
	assert map.size() == 1
	map.clear()
	assert map.size() == 0
}

fun operation_test() {
	var map = h.HashMap(16)
	
	class Rect {
		fun init(l, t, r, b) { 
			this.l = l;
			this.t = t;
			this.r = r;
			this.b = b;
		}
		
		fun _hashCode() {
			return this.l*31 + this.t*32 + this.r*33 + this.b
		}
		
		fun _equals(rect) {
			return this.l == rect.l and this.r == rect.r and
				this.t == rect.t and this.b == rect.b
		}
	}
	
	for (i in range(1, 10001)) {
		map[Rect(i*0,i*2,i*4,i*8)] = i
	}
	
	for (i in range(1, 10001)) {
		assert map[Rect(i*0,i*2,i*4,i*8)] == i
	}
	
	assert map.size() == 10000
	for (i in range(1, 5001)) {
		assert map.remove(Rect(i*0,i*2,i*4,i*8)) == i
		assert map.size() == 10000 - i
	}
	map.clear()
	map.size() == 0
}

simple_operation_test()
operation_test()