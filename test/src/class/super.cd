{
	class A {
		init(value) {
			this.value = value
		}
	}
	
	class B: A {
	}
	
	var b = B(1)
	assert b.value == 1
	
	class C: B {
		init(value) {
			super.init(value)
		}
	}
	
	var c = C(2)
	assert c.init(2) == c
	assert c.value == 2
}

class Message {
	fun init(message) {
		if (getAttr(this, "message") != null) {
			raise Error("Fail")
		}
		this.message = message
	}
}

class Submessage : Message {
	fun init() {
		super.init("")
	}
}
Submessage()

class Submessage : Message {
	fun init() {
		{
			super.init("")
			this.message = ""
		}
	}
}
Submessage()

try {
	class Submessage : Message {
		fun init() {
			var a = super.init("")
		}
	}
	Submessage()
} intercept ArgumentError {}
else {
	assert false
}

try {
	class Submessage : Message {
		fun init() {
			{
				var a;
				super.init("")
			}
		}
	}
	Submessage()
} intercept ArgumentError {}
else {
	assert false
}